{"version":3,"sources":["components/LightBulb.module.css","components/form/LightIntensityForm.js","components/form/LightRowForm.js","components/form/LightCountForm.js","components/form/LightSpeedForm.js","components/form/LightToggleButton.js","components/form/LightSizeForm.js","components/form/LightColor.js","components/form/LightColorForm.js","components/ChristmasForm.js","components/LightBulb.js","components/LightRow.js","components/LightContainer.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","LightIntensityForm","lightIntensity","setLightIntensity","type","max","value","onChange","e","preventDefault","console","log","target","class","className","LightRowForm","lightRows","setLightRows","LightCountForm","lightCount","setLightCount","lightTime","setLightTime","min","LightToggleButton","lightToggle","setLightToggle","onClick","LightSizeForm","lightSize","setLightSize","LightColor","index","color","lightColors","setLightColors","useState","indColor","setIndColor","useEffect","newColors","slice","splice","displayName","LightColorForm","lightColorRender","n","length","i","push","Math","floor","random","getRand","ChristmasForm","LightSpeedForm","Bulb","styled","div","props","size","css","intensity","keyframes","speed","LightBulb","LightRow","lightBulbRender","lightSpeed","Number","LightContainer","lightRowsRender","App","initialColors","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5912b689.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"lightbulb\":\"LightBulb_lightbulb__3jKJ3\",\"glow-1\":\"LightBulb_glow-1__3Qitv\"};","import React, { PropTypes } from 'react';\r\n\r\nconst LightIntensityForm = ({ lightIntensity, setLightIntensity }) => {\r\n\r\n\tconst onChangeHandler = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconsole.log(e);\r\n\r\n\t\tsetLightIntensity(e.target.value);\r\n\t}\r\n\r\n    return (\r\n\r\n    \t<div>\r\n    \t<h3>Light Intensity</h3>\r\n        <input type=\"range\" max=\"10\" value={lightIntensity} onChange={onChangeHandler} class=\"range\" /> \r\n        <div className=\"inline ml-2 border p-1\">{lightIntensity}</div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default LightIntensityForm;\r\n","import React, { PropTypes } from 'react';\r\n\r\nconst LightRowForm = ({ lightRows, setLightRows }) => {\r\n\tconst onChangeHandler = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconsole.log(e);\r\n\r\n\t\tsetLightRows(e.target.value);\r\n\t}\r\n    return (\r\n    \t<div>\r\n    \t<h3>Number of Rows of Lights</h3>\r\n        <input type=\"range\" max=\"7\" value={lightRows} onChange={onChangeHandler} class=\"range\" /> \r\n        <div className=\"inline ml-2 border p-1\">{lightRows}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default LightRowForm;\r\n","import React, { PropTypes } from 'react';\r\n\r\nconst LightCountForm = ({ lightCount, setLightCount }) => {\r\n\tconst onChangeHandler = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconsole.log(e);\r\n\r\n\t\tsetLightCount(e.target.value);\r\n\t}\r\n    return (\r\n    \t<div>\r\n    \t<h3>Number of Lights on Each Row</h3>\r\n        <input type=\"range\" max=\"20\" value={lightCount} onChange={onChangeHandler} class=\"range\" /> \r\n        <div className=\"inline ml-2 border p-1\">{lightCount}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default LightCountForm;\r\n","import React, { PropTypes } from 'react';\r\n\r\nconst LightRowForm = ({ lightTime, setLightTime }) => {\r\n\tconst onChangeHandler = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconsole.log(e);\r\n\r\n\t\tsetLightTime(e.target.value);\r\n\t}\r\n    return (\r\n    \t<div>\r\n    \t<h3>Speed of Lights(Higher is Slower)</h3>\r\n        <input type=\"range\" min=\"1\" max=\"10\" value={lightTime} onChange={onChangeHandler} class=\"range\" /> \r\n        <div className=\"inline ml-2 border p-1\">{lightTime}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default LightRowForm;\r\n","import React, { PropTypes } from 'react';\r\n\r\nconst LightToggleButton = ({ lightToggle, setLightToggle }) => {\r\n\tconst onClickHandler = () =>{\r\n\t\tsetLightToggle(!lightToggle);\r\n\t}\r\n\r\n\r\n    return (\r\n        <button className=\"p-3 rounded bg-gray-700 mx-auto my-3 table\" onClick={onClickHandler} >{lightToggle === true ? \"Turn off Lights\" : \"Turn on Lights\"}</button>\r\n    );\r\n};\r\n\r\n\r\nexport default LightToggleButton;\r\n","import React from 'react';\r\n\r\nconst LightSizeForm = ({ lightSize, setLightSize }) => {\r\n\r\n\tconst onChangeHandler = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconsole.log(e);\r\n\r\n\t\tsetLightSize(e.target.value);\r\n\t}\r\n\r\n    return (\r\n        <div>\r\n    \t<h3>Size of Lights</h3>\r\n        <input type=\"range\" min=\"1\" max=\"10\" value={lightSize} onChange={onChangeHandler} class=\"range\" /> \r\n        <div className=\"inline ml-2 border p-1\">{lightSize}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LightSizeForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { HexColorPicker } from \"react-colorful\";\r\n\r\n\r\n\r\n\r\nconst LightColor = ({ index, color, lightColors, setLightColors }) => {\r\n\tconst [indColor, setIndColor] = useState(color);\r\n\r\n\tuseEffect(() => {\r\n\t\tlet newColors = lightColors.slice();\r\n\t\tnewColors[index] = indColor;\r\n\t\tsetLightColors(newColors);\r\n  }, [indColor]);\r\n\r\n\tconst handleDelete = () =>{\r\n\t\tlet newColors = lightColors.slice();\r\n\t    newColors.splice(index, 1);\r\n\t\tsetLightColors(newColors);\r\n\t}\r\n\r\n\r\n\r\n    return (\r\n    \t<div>\r\n    \t\t<button className=\"p-1 rounded bg-gray-700 mx-auto my-3 ml-0 table\" onClick={handleDelete}>Delete</button>\r\n    \t     <div className=\"small\"><HexColorPicker color={indColor} onChange={setIndColor} /></div>\r\n    \t</div>\r\n    );\r\n};\r\n\r\nLightColor.displayName = 'LightColor';\r\n\r\nexport default LightColor;\r\n","import React, { PropTypes } from 'react';\r\nimport LightColor from './LightColor';\r\n\r\nconst LightColorForm = ({ lightColors, setLightColors }) => {\r\n\tlet lightColorRender = [];\r\n\tconst n = lightColors.length;\r\n\r\n\tfor (var i = 0; i < n; i++) {\r\n\r\n\t\tlet index = i;\r\n\t    lightColorRender.push(<LightColor key={index} index={index} lightColors={lightColors} color={lightColors[i]} setLightColors={setLightColors} />);\r\n\t\t\r\n\t}\r\n\r\n\tconst getRand = () => {\r\n var letters = '0123456789ABCDEF';\r\n  var color = '#';\r\n  for (var i = 0; i < 6; i++) {\r\n    color += letters[Math.floor(Math.random() * 16)];\r\n  }\r\n  return color;\r\n}\r\n\r\n\r\n\tconst onClickHandler = () => {\r\n\t\tlet newColors = lightColors.slice();\r\n\t    newColors.push(getRand());\r\n\t\tsetLightColors(newColors);\r\n\t}\r\n\r\n    return (\r\n    \t<>\r\n    \t        <button className=\"p-3 rounded bg-gray-700 mx-auto my-3 table\" onClick={onClickHandler} >Add New Color</button>\r\n    \t<div className=\"flex justify-around items-end flex-wrap\">\r\n\t\t{lightColorRender}  \r\n\t\t</div>\r\n\t\t</>     \r\n    );\r\n};\r\n\r\nLightColorForm.displayName = 'LightColorForm';\r\n\r\n\r\nexport default LightColorForm;\r\n","import React, { PropTypes } from 'react';\r\n\r\nimport LightIntensityForm from './form/LightIntensityForm.js';\r\nimport LightRowForm from './form/LightRowForm.js';\r\nimport LightCountForm from './form/LightCountForm.js';\r\nimport LightSpeedForm from './form/LightSpeedForm.js';\r\nimport LightToggleButton from './form/LightToggleButton.js';\r\nimport LightSizeForm from './form/LightSizeForm.js';\r\nimport LightColorForm from './form/LightColorForm';\r\n\r\n\r\n\r\nconst ChristmasForm = ({ lightCount, setLightCount, lightRows,setLightRows,lightIntensity,setLightIntensity,lightSize,setLightSize,lightTime,setLightTime, lightToggle, setLightToggle, lightColors, setLightColors }) => {\r\n    return (\r\n      <div className=\"form p-4 shadow-md mb-12\">\r\n        <h2 className=\"text-center font-bold uppercase text-5xl\">Christmas Light Generator</h2>\r\n\r\n      \t<div className=\"block lg:flex justify-between items-center mx-auto my-4 px-4 max-w-5xl text-center\">\r\n        <LightIntensityForm lightIntensity={lightIntensity} setLightIntensity={setLightIntensity} />\r\n        <LightSizeForm lightSize={lightSize} setLightSize={setLightSize} />\r\n        <LightSpeedForm lightTime={lightTime} setLightTime={setLightTime} />\r\n        <LightCountForm lightCount={lightCount} setLightCount={setLightCount} />\r\n        <LightRowForm lightRows={lightRows} setLightRows={setLightRows} />\r\n        </div>\r\n\r\n        <hr />\r\n\r\n        <div className=\"max-w-5xl mx-auto my-12\">\r\n        <LightColorForm lightColors={lightColors} setLightColors={setLightColors}/>\r\n        </div>\r\n\r\n        <LightToggleButton lightToggle={lightToggle} setLightToggle={setLightToggle} />\r\n        \r\n      </div>\r\n    );\r\n};\r\n\r\n\r\nexport default ChristmasForm;\r\n","import React, { PropTypes } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components'\r\n\r\n\r\nimport styles from './LightBulb.module.css';\r\n\r\n\r\n\tconst glow = (color, intensity) => keyframes`\r\n\t  0%,\r\n\t  100% {\r\n\t    box-shadow: 0 0 ${intensity}0px 5px ${color};\r\n\t  }\r\n\t  50% {\r\n\t    box-shadow: none;\r\n\t  }\r\n\t`;\r\n\r\n\r\n// Todo add dynamic size and intensity from size and intensity props\r\n\tconst Bulb = styled.div`\r\n\t\tdisplay: block;\r\n\t\tborder-radius: 50%;\r\n\t\twidth: ${props => (props.size/2)*5}px; \r\n\t\theight: ${props => props.size*5}px;\r\n\t\tbackground-color: ${props => props.color};\r\n\t\t${props => (props.lightToggle === true ? css`animation:${glow(props.color, props.intensity)} ${props.speed}00ms infinite` : '')};\r\n\r\n\r\n\t`;\r\n\r\n\r\nconst LightBulb = ({ color, speed, lightIntensity, lightSize, lightToggle }) => {\r\n\t\r\n    return (\r\n\t  <Bulb color={color} speed={speed} size={lightSize} intensity={lightIntensity} lightToggle={lightToggle} />\r\n    );\r\n};\r\n\r\n\r\nexport default LightBulb;\r\n","import React from 'react';\r\n\r\nimport LightBulb from './LightBulb.js'\r\n\r\nconst LightRow = ({ lightCount, lightIntensity, lightSize, lightColors, lightTime, lightToggle }) => {\r\n  \r\nvar lightBulbRender = [];\r\n\r\n\r\n\t\r\n\r\n\r\n\tconst n = lightCount;\r\n\tfor (var i = 0; i < n; i++) {\r\n\r\n\t\tlet index = i;\r\n\r\n\t\tlet lightSpeed = Number(lightTime) + index;\r\n\t    lightBulbRender.push(<LightBulb key={index} speed={lightSpeed} color={lightColors[index++%lightColors.length]} lightIntensity={lightIntensity} lightSize={lightSize} lightToggle={lightToggle} />);\r\n\t\t\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"flex justify-around my-3\">\r\n\t\t\t{lightBulbRender}\r\n\t\t</div>\r\n\t\t);\r\n\t\r\n\r\n};\r\n\r\n\r\nexport default LightRow;\r\n","import React, { PropTypes } from 'react';\r\n\r\n\r\nimport LightRow from './LightRow.js'\r\n\r\nconst LightContainer = ({ lightIntensity, lightSize, lightRows, lightCount, lightColors, lightTime, lightToggle }) => {\r\n    var lightRowsRender = [];\r\n\r\n\tfor (var i = 0; i < lightRows; i++) {\r\n\t    lightRowsRender.push(<LightRow lightCount={lightCount} lightIntensity={lightIntensity} lightSize={lightSize} lightColors={lightColors} lightTime={lightTime} lightToggle={lightToggle} />);\r\n\t}\t\r\n\treturn lightRowsRender;\r\n\t\r\n};\r\n\r\n\r\nexport default LightContainer;\r\n","import {useState, useEffect} from 'react';\n\nimport ChristmasForm from './components/ChristmasForm.js';\nimport LightContainer from './components/LightContainer.js'\n\nfunction App() {\n  \nconst getRand = () => {\n var letters = '0123456789ABCDEF';\n  var color = '#';\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\n\n  const initialColors = [getRand(), getRand(), getRand()]\n  const [lightColors, setLightColors] = useState(initialColors)\n  const [lightIntensity, setLightIntensity] = useState(5);\n  const [lightRows, setLightRows] = useState(3);\n  const [lightCount, setLightCount] = useState(10);\n  const [lightSize, setLightSize] = useState(5);\n  const [lightToggle, setLightToggle] = useState(true);\n  const [lightTime, setLightTime] = useState(3);\n\n  return (\n\n    <div>\n      \n\n      <ChristmasForm \n      lightRows={lightRows}\n      setLightRows={setLightRows}\n      lightCount={lightCount}\n      setLightCount={setLightCount}\n      lightIntensity={lightIntensity}\n      setLightIntensity={setLightIntensity}\n      lightSize={lightSize}\n      setLightSize={setLightSize}\n      lightTime={lightTime}\n      setLightTime={setLightTime}\n      lightToggle={lightToggle}\n      setLightToggle={setLightToggle}\n      lightColors={lightColors}\n      setLightColors={setLightColors}\n      />\n      \n\n      <LightContainer \n        lightRows={lightRows}\n        lightCount={lightCount}\n        lightIntensity={lightIntensity}\n        lightSize={lightSize}\n        lightColors={lightColors} \n        lightTime={lightTime}\n        lightToggle={lightToggle}\n      />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}